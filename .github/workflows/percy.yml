# This is a basic workflow to help you get started with Actions

name: Percy

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - dev
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm build
        env:
          # Example envs
          NODE_ENV: production

      - name: Install Percy
        run: pnpm add @percy/cli -D

      - name: Serve and Run Percy
        run: |
          pnpm serve & # Run server in background
          SERVER_PID=$!

          # Wait for server to be ready (adjust sleep time as needed)
          sleep 10

          # Set environment variables to help with timeouts
          export PERCY_NETWORK_IDLE_WAIT_TIMEOUT=60000
          export PERCY_PAGE_LOAD_TIMEOUT=60000

          # Run Percy snapshots
          pnpm percy snapshot snapshots.yml

          # Kill the server process when done
          kill $SERVER_PID
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
